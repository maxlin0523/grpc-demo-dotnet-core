version: '3.7'
services:
  # GrpcDemo.WebApplication
  webapplication:
    build:
      context: ../
      dockerfile: ./build/WebApplication.Dockerfile
    container_name: WebApplication
    networks:
      - test
    ports:
      - "5555:80"
    environment:
      ASPNETCORE_ENVIRONMENT: "Development"
      DomainService__Host: "DomainService"
      DomainService__Port: "3333"
    depends_on: 
      - domainservice
  # GrpcDemo.DomainService
  domainservice:
    build:
      context: ../
      dockerfile: ./build/DomainService.Dockerfile
    container_name: DomainService
    networks:
      - test
    environment:
      ASPNETCORE_ENVIRONMENT: "Development"
      # 同個 bridge 可用 container_name 解析出容器 IP
      Sql__Host: "Sql"
      redis__ConnectionString: "redis:6379"
    depends_on:
      - mssql
  # MSSQL 
  mssql:
    image: mcr.microsoft.com/mssql/server
    container_name: Sql
    volumes:
      - ./data/mssql/data:/var/opt/mssql/data
      - ./data/mssql/log:/var/opt/mssql/log
      - ./data/mssql/secrets:/var/opt/mssql/secrets
      - ./init:/usr/src
    networks:
      - test
    environment:
      ACCEPT_EULA: Y
      SA_PASSWORD: Aa123456!
    command:  
      - /bin/bash 
      - -c
      - /opt/mssql-tools/bin/sqlcmd -S 127.0.0.1,1433 -U sa -P Aa123456! -d master -i /usr/src/mssql-init.sql & /opt/mssql/bin/sqlservr
    depends_on:
      - redis
  # Redis
  redis:
    image: redis
    container_name: redis
    volumes:
      - .data/redis:/data
    networks:
      - test
    ports:
      - "3336:6379"
# bridge
networks:
  test:
    driver: bridge 